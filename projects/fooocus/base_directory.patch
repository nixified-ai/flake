diff --git a/modules/config.py b/modules/config.py
index 1f4e82e..70e6ac0 100644
--- a/modules/config.py
+++ b/modules/config.py
@@ -10,8 +10,8 @@ from modules.model_loader import load_file_from_url
 from modules.util import get_files_from_folder
 
 
-config_path = os.path.abspath("./config.txt")
-config_example_path = os.path.abspath("config_modification_tutorial.txt")
+config_path = os.path.expanduser("~/Fooocus/config.txt")
+config_example_path = os.path.expanduser("~/Fooocus/config_modification_tutorial.txt")
 config_dict = {}
 always_save_keys = []
 visited_keys = []
@@ -107,7 +107,7 @@ def get_path_output() -> str:
     Checking output path argument and overriding default path.
     """
     global config_dict
-    path_output = get_dir_or_set_default('path_outputs', '../outputs/')
+    path_output = get_dir_or_set_default('path_outputs', 'outputs')
     if args_manager.args.output_path:
         print(f'[CONFIG] Overriding config value path_outputs with {args_manager.args.output_path}')
         config_dict['path_outputs'] = path_output = args_manager.args.output_path
@@ -129,21 +129,21 @@ def get_dir_or_set_default(key, default_value):
     else:
         if v is not None:
             print(f'Failed to load config key: {json.dumps({key:v})} is invalid or does not exist; will use {json.dumps({key:default_value})} instead.')
-        dp = os.path.abspath(os.path.join(os.path.dirname(__file__), default_value))
+        dp = os.path.abspath(os.path.join(os.path.expanduser('~/Fooocus'), default_value))
         os.makedirs(dp, exist_ok=True)
         config_dict[key] = dp
         return dp
 
 
-path_checkpoints = get_dir_or_set_default('path_checkpoints', '../models/checkpoints/')
-path_loras = get_dir_or_set_default('path_loras', '../models/loras/')
-path_embeddings = get_dir_or_set_default('path_embeddings', '../models/embeddings/')
-path_vae_approx = get_dir_or_set_default('path_vae_approx', '../models/vae_approx/')
-path_upscale_models = get_dir_or_set_default('path_upscale_models', '../models/upscale_models/')
-path_inpaint = get_dir_or_set_default('path_inpaint', '../models/inpaint/')
-path_controlnet = get_dir_or_set_default('path_controlnet', '../models/controlnet/')
-path_clip_vision = get_dir_or_set_default('path_clip_vision', '../models/clip_vision/')
-path_fooocus_expansion = get_dir_or_set_default('path_fooocus_expansion', '../models/prompt_expansion/fooocus_expansion')
+path_checkpoints = get_dir_or_set_default('path_checkpoints', 'models/checkpoints')
+path_loras = get_dir_or_set_default('path_loras', 'models/loras')
+path_embeddings = get_dir_or_set_default('path_embeddings', 'models/embeddings')
+path_vae_approx = get_dir_or_set_default('path_vae_approx', 'models/vae_approx')
+path_upscale_models = get_dir_or_set_default('path_upscale_models', 'models/upscale_models')
+path_inpaint = get_dir_or_set_default('path_inpaint', 'models/inpaint')
+path_controlnet = get_dir_or_set_default('path_controlnet', 'models/controlnet')
+path_clip_vision = get_dir_or_set_default('path_clip_vision', 'models/clip_vision')
+path_fooocus_expansion = get_dir_or_set_default('path_fooocus_expansion', 'models/prompt_expansion/fooocus_expansion')
 path_outputs = get_path_output()
 
 
